{
    "openapi": "3.0.3",
    "info": {
        "title": "Pulp 3 API",
        "version": "v3",
        "description": "Fetch, Upload, Organize, and Distribute Software Packages",
        "contact": {
            "name": "Pulp Team",
            "email": "pulp-list@redhat.com",
            "url": "https://pulpproject.org"
        },
        "license": {
            "name": "GPLv2+",
            "url": "https://raw.githubusercontent.com/pulp/pulpcore/master/LICENSE"
        },
        "x-logo": {
            "url": "https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg"
        },
        "x-pulp-app-versions": {
            "pulpcore": "3.9.0",
            "pulp_npm": "0.1.0a1"
        }
    },
    "paths": {
        "/pulp/api/v3/content/npm/packages/": {
            "get": {
                "operationId": "content_npm_packages_list",
                "description": "A ViewSet for Package.\n\nDefine endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/npm/units/\n\nAlso specify queryset and serializer for Package.",
                "summary": "List packages",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version",
                        "required": false,
                        "in": "query",
                        "description": "repository_version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version_added",
                        "required": false,
                        "in": "query",
                        "description": "repository_version_added",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version_removed",
                        "required": false,
                        "in": "query",
                        "description": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packages"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatednpm.PackageResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_npm_packages_create",
                "description": "Perform bookkeeping when saving Content.\n\n\"Artifacts\" need to be popped off and saved indpendently, as they are not actually part\nof the Content model.",
                "summary": "Create a package",
                "tags": [
                    "Content: Packages"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/npm.Package"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/npm.Package"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/npm.PackageResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{npm_package_href}": {
            "get": {
                "operationId": "content_npm_packages_read",
                "description": "A ViewSet for Package.\n\nDefine endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/npm/units/\n\nAlso specify queryset and serializer for Package.",
                "summary": "Inspect a package",
                "parameters": [
                    {
                        "in": "path",
                        "name": "npm_package_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packages"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/npm.PackageResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/distributions/npm/npm/": {
            "get": {
                "operationId": "distributions_npm_npm_list",
                "description": "ViewSet for NPM Distributions.",
                "summary": "List npm distributions",
                "parameters": [
                    {
                        "name": "base_path",
                        "required": false,
                        "in": "query",
                        "description": "base_path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__contains",
                        "required": false,
                        "in": "query",
                        "description": "base_path__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__icontains",
                        "required": false,
                        "in": "query",
                        "description": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__in",
                        "required": false,
                        "in": "query",
                        "description": "base_path__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Npm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatednpm.NpmDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "distributions_npm_npm_create",
                "description": "Trigger an asynchronous create task",
                "summary": "Create a npm distribution",
                "tags": [
                    "Distributions: Npm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/npm.NpmDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/npm.NpmDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/npm.NpmDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{npm_npm_distribution_href}": {
            "get": {
                "operationId": "distributions_npm_npm_read",
                "description": "ViewSet for NPM Distributions.",
                "summary": "Inspect a npm distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "npm_npm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Npm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/npm.NpmDistributionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "distributions_npm_npm_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a npm distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "npm_npm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Npm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/npm.NpmDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/npm.NpmDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/npm.NpmDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "distributions_npm_npm_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a npm distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "npm_npm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Npm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchednpm.NpmDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchednpm.NpmDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchednpm.NpmDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "distributions_npm_npm_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a npm distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "npm_npm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Npm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/remotes/npm/npm/": {
            "get": {
                "operationId": "remotes_npm_npm_list",
                "description": "A ViewSet for NpmRemote.\n\nSimilar to the PackageViewSet above, define endpoint_name,\nqueryset and serializer, at a minimum.",
                "summary": "List npm remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__range",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Npm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatednpm.NpmRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "remotes_npm_npm_create",
                "description": "A ViewSet for NpmRemote.\n\nSimilar to the PackageViewSet above, define endpoint_name,\nqueryset and serializer, at a minimum.",
                "summary": "Create a npm remote",
                "tags": [
                    "Remotes: Npm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/npm.NpmRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/npm.NpmRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/npm.NpmRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/npm.NpmRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{npm_npm_remote_href}": {
            "get": {
                "operationId": "remotes_npm_npm_read",
                "description": "A ViewSet for NpmRemote.\n\nSimilar to the PackageViewSet above, define endpoint_name,\nqueryset and serializer, at a minimum.",
                "summary": "Inspect a npm remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "npm_npm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Npm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/npm.NpmRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "remotes_npm_npm_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a npm remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "npm_npm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Npm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/npm.NpmRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/npm.NpmRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/npm.NpmRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "remotes_npm_npm_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a npm remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "npm_npm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Npm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchednpm.NpmRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchednpm.NpmRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchednpm.NpmRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "remotes_npm_npm_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a npm remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "npm_npm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Npm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repositories/npm/npm/": {
            "get": {
                "operationId": "repositories_npm_npm_list",
                "description": "A ViewSet for NpmRepository.\n\nSimilar to the PackageViewSet above, define endpoint_name,\nqueryset and serializer, at a minimum.",
                "summary": "List npm repositorys",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Npm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatednpm.NpmRepositoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "repositories_npm_npm_create",
                "description": "A ViewSet for NpmRepository.\n\nSimilar to the PackageViewSet above, define endpoint_name,\nqueryset and serializer, at a minimum.",
                "summary": "Create a npm repository",
                "tags": [
                    "Repositories: Npm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/npm.NpmRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/npm.NpmRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/npm.NpmRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/npm.NpmRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{npm_npm_repository_href}": {
            "get": {
                "operationId": "repositories_npm_npm_read",
                "description": "A ViewSet for NpmRepository.\n\nSimilar to the PackageViewSet above, define endpoint_name,\nqueryset and serializer, at a minimum.",
                "summary": "Inspect a npm repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "npm_npm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Npm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/npm.NpmRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "repositories_npm_npm_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a npm repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "npm_npm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Npm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/npm.NpmRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/npm.NpmRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/npm.NpmRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "repositories_npm_npm_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a npm repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "npm_npm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Npm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchednpm.NpmRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchednpm.NpmRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchednpm.NpmRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_npm_npm_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a npm repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "npm_npm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Npm"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{npm_npm_repository_href}modify/": {
            "post": {
                "operationId": "repositories_npm_npm_modify",
                "description": "Trigger an asynchronous task to create a new repository version.",
                "summary": "Modify Repository Content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "npm_npm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Npm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{npm_npm_repository_href}sync/": {
            "post": {
                "operationId": "repositories_npm_npm_sync",
                "description": "Trigger an asynchronous task to sync content.",
                "summary": "Sync from remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "npm_npm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Npm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySyncURL"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySyncURL"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySyncURL"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{npm_npm_repository_href}versions/": {
            "get": {
                "operationId": "repositories_npm_npm_versions_list",
                "description": "A ViewSet for a NpmRepositoryVersion represents a single Npm repository version.",
                "summary": "List repository versions",
                "parameters": [
                    {
                        "name": "content",
                        "required": false,
                        "in": "query",
                        "description": "content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "content__in",
                        "required": false,
                        "in": "query",
                        "description": "content__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "npm_npm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "number",
                        "required": false,
                        "in": "query",
                        "description": "number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__gt",
                        "required": false,
                        "in": "query",
                        "description": "number__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__gte",
                        "required": false,
                        "in": "query",
                        "description": "number__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__lt",
                        "required": false,
                        "in": "query",
                        "description": "number__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__lte",
                        "required": false,
                        "in": "query",
                        "description": "number__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__range",
                        "required": false,
                        "in": "query",
                        "description": "number__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__gt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__gte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__lt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__lte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__range",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Npm Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRepositoryVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{npm_npm_repository_version_href}": {
            "get": {
                "operationId": "repositories_npm_npm_versions_read",
                "description": "A ViewSet for a NpmRepositoryVersion represents a single Npm repository version.",
                "summary": "Inspect a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "npm_npm_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Npm Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepositoryVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_npm_npm_versions_delete",
                "description": "Trigger an asynchronous task to delete a repository version.",
                "summary": "Delete a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "npm_npm_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Npm Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{npm_npm_repository_version_href}repair/": {
            "post": {
                "operationId": "repositories_npm_npm_versions_repair",
                "description": "Trigger an asynchronous task to repair a repository version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "npm_npm_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Npm Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryVersion"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryVersion"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryVersion"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_npm/packages/{name}/": {
            "get": {
                "operationId": "pulp_npm_packages_get",
                "description": "Return a published package.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Npm: Packages"
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AsyncOperationResponse": {
                "type": "object",
                "description": "Serializer for asynchronous operations.",
                "properties": {
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "description": "The href of the task."
                    }
                },
                "required": [
                    "task"
                ]
            },
            "ContentSummary": {
                "type": "object",
                "description": "Serializer for the RepositoryVersion content summary",
                "properties": {
                    "added": {
                        "type": "object"
                    },
                    "removed": {
                        "type": "object"
                    },
                    "present": {
                        "type": "object"
                    }
                },
                "required": [
                    "added",
                    "present",
                    "removed"
                ]
            },
            "ContentSummaryResponse": {
                "type": "object",
                "description": "Serializer for the RepositoryVersion content summary",
                "properties": {
                    "added": {
                        "type": "object"
                    },
                    "removed": {
                        "type": "object"
                    },
                    "present": {
                        "type": "object"
                    }
                },
                "required": [
                    "added",
                    "present",
                    "removed"
                ]
            },
            "PaginatedRepositoryVersionResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RepositoryVersionResponse"
                        }
                    }
                }
            },
            "Paginatednpm.NpmDistributionResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/npm.NpmDistributionResponse"
                        }
                    }
                }
            },
            "Paginatednpm.NpmRemoteResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/npm.NpmRemoteResponse"
                        }
                    }
                }
            },
            "Paginatednpm.NpmRepositoryResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/npm.NpmRepositoryResponse"
                        }
                    }
                }
            },
            "Paginatednpm.PackageResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/npm.PackageResponse"
                        }
                    }
                }
            },
            "Patchednpm.NpmDistribution": {
                "type": "object",
                "description": "Serializer for NPM Distributions.",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    }
                }
            },
            "Patchednpm.NpmRemote": {
                "type": "object",
                "description": "A Serializer for NpmRemote.\n\nAdd any new fields if defined on NpmRemote.\nSimilar to the example above, in PackageSerializer.\nAdditional validators can be added to the parent validators list\n\nFor example::\n\nclass Meta:\n    validators = platform.RemoteSerializer.Meta.validators + [myValidator1, myValidator2]\n\nBy default the 'policy' field in platform.RemoteSerializer only validates the choice\n'immediate'. To add on-demand support for more 'policy' options, e.g. 'streamed' or 'on_demand',\nre-define the 'policy' option as follows::",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://user:password@host:port"
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "nullable": true,
                        "description": "The password to be used for authentication when syncing."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Total number of simultaneous connections."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default."
                    }
                }
            },
            "Patchednpm.NpmRepository": {
                "type": "object",
                "description": "A Serializer for NpmRepository.\n\nAdd any new fields if defined on NpmRepository.\nSimilar to the example above, in PackageSerializer.\nAdditional validators can be added to the parent validators list\n\nFor example::\n\nclass Meta:\n    validators = platform.RepositorySerializer.Meta.validators + [myValidator1, myValidator2]",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    }
                }
            },
            "PolicyEnum": {
                "enum": [
                    "immediate",
                    "on_demand",
                    "streamed"
                ],
                "type": "string"
            },
            "RepositoryAddRemoveContent": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "add_content_units": {
                        "type": "array",
                        "items": {},
                        "description": "A list of content units to add to a new repository version. This content is added after remove_content_units are removed."
                    },
                    "remove_content_units": {
                        "type": "array",
                        "items": {},
                        "description": "A list of content units to remove from the latest repository version. You may also specify '*' as an entry to remove all content. This content is removed before add_content_units are added."
                    },
                    "base_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A repository version whose content will be used as the initial set of content for the new repository version"
                    }
                }
            },
            "RepositorySyncURL": {
                "type": "object",
                "description": "A mixin for validating unknown serializers' fields.",
                "properties": {
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "A remote to sync from. This will override a remote set on repository."
                    },
                    "mirror": {
                        "type": "boolean",
                        "default": false,
                        "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only."
                    }
                }
            },
            "RepositoryVersion": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "base_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A repository version whose content was used as the initial set of content for this repository version"
                    }
                }
            },
            "RepositoryVersionResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "number": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "base_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A repository version whose content was used as the initial set of content for this repository version"
                    },
                    "content_summary": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ContentSummaryResponse"
                            }
                        ],
                        "readOnly": true,
                        "description": "Various count summaries of the content in the version and the HREF to view them."
                    }
                }
            },
            "npm.NpmDistribution": {
                "type": "object",
                "description": "Serializer for NPM Distributions.",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "npm.NpmDistributionResponse": {
                "type": "object",
                "description": "Serializer for NPM Distributions.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "base_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL for accessing the universe API as defined by this distribution."
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "npm.NpmRemote": {
                "type": "object",
                "description": "A Serializer for NpmRemote.\n\nAdd any new fields if defined on NpmRemote.\nSimilar to the example above, in PackageSerializer.\nAdditional validators can be added to the parent validators list\n\nFor example::\n\nclass Meta:\n    validators = platform.RemoteSerializer.Meta.validators + [myValidator1, myValidator2]\n\nBy default the 'policy' field in platform.RemoteSerializer only validates the choice\n'immediate'. To add on-demand support for more 'policy' options, e.g. 'streamed' or 'on_demand',\nre-define the 'policy' option as follows::",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://user:password@host:port"
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "nullable": true,
                        "description": "The password to be used for authentication when syncing."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Total number of simultaneous connections."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default."
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "npm.NpmRemoteResponse": {
                "type": "object",
                "description": "A Serializer for NpmRemote.\n\nAdd any new fields if defined on NpmRemote.\nSimilar to the example above, in PackageSerializer.\nAdditional validators can be added to the parent validators list\n\nFor example::\n\nclass Meta:\n    validators = platform.RemoteSerializer.Meta.validators + [myValidator1, myValidator2]\n\nBy default the 'policy' field in platform.RemoteSerializer only validates the choice\n'immediate'. To add on-demand support for more 'policy' options, e.g. 'streamed' or 'on_demand',\nre-define the 'policy' option as follows::",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://user:password@host:port"
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "nullable": true,
                        "description": "The password to be used for authentication when syncing."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Total number of simultaneous connections."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default."
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "npm.NpmRepository": {
                "type": "object",
                "description": "A Serializer for NpmRepository.\n\nAdd any new fields if defined on NpmRepository.\nSimilar to the example above, in PackageSerializer.\nAdditional validators can be added to the parent validators list\n\nFor example::\n\nclass Meta:\n    validators = platform.RepositorySerializer.Meta.validators + [myValidator1, myValidator2]",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "npm.NpmRepositoryResponse": {
                "type": "object",
                "description": "A Serializer for NpmRepository.\n\nAdd any new fields if defined on NpmRepository.\nSimilar to the example above, in PackageSerializer.\nAdditional validators can be added to the parent validators list\n\nFor example::\n\nclass Meta:\n    validators = platform.RepositorySerializer.Meta.validators + [myValidator1, myValidator2]",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "versions_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "latest_version_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "npm.Package": {
                "type": "object",
                "description": "A Serializer for Package.\n\nAdd serializers for the new fields defined in Package and\nadd those fields to the Meta class keeping fields from the parent class as well.\n\nFor example::\n\nfield1 = serializers.TextField()\nfield2 = serializers.IntegerField()\nfield3 = serializers.CharField()\n\nclass Meta:\n    fields = platform.SingleArtifactContentSerializer.Meta.fields + (\n        'field1', 'field2', 'field3'\n    )\n    model = models.Package",
                "properties": {
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "relative_path": {
                        "type": "string"
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "An uploaded file that may be turned into the artifact of the content unit."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "relative_path",
                    "version"
                ]
            },
            "npm.PackageResponse": {
                "type": "object",
                "description": "A Serializer for Package.\n\nAdd serializers for the new fields defined in Package and\nadd those fields to the Meta class keeping fields from the parent class as well.\n\nFor example::\n\nfield1 = serializers.TextField()\nfield2 = serializers.IntegerField()\nfield3 = serializers.CharField()\n\nclass Meta:\n    fields = platform.SingleArtifactContentSerializer.Meta.fields + (\n        'field1', 'field2', 'field3'\n    )\n    model = models.Package",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "relative_path": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "relative_path",
                    "version"
                ]
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            },
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "Session"
            }
        }
    },
    "servers": [
        {
            "url": "http://localhost:24817/"
        }
    ]
}
